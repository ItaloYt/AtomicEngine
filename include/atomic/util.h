#ifndef ATOMIC_ERROR_HEADER
#define ATOMIC_ERROR_HEADER

#include <stdio.h>

#define RED "\033[31m"
#define NONE "\033[0m"

#define log_error(string, ...) fprintf(log_file, RED "%s:%d - " string NONE, __FUNCTION__, __LINE__, ##__VA_ARGS__)
#define log_info(string, ...) fprintf(log_file, "%s:%d - " string, __FUNCTION__, __LINE__, ##__VA_ARGS__)

#define FRAMES_IN_FLIGHT 1

enum AtomicError {
    SUCCESS = 0,
    INSUFFICIENT_PARAMETERS = 1,
    CREATE_ERROR_FILE_ERROR = 2,
    NOT_IMPLEMENTED_BEHAVIOUR = 3,
    MALLOC_ERROR = 4,
    
    VULKAN_INSTANCE_CREATION_ERROR = 101,
    VULKAN_LOADING_PHYSICAL_DEVICES_ERROR = 102,
    VULKAN_MISSING_PHYSICAL_DEVICE_ERROR = 103,
    VULKAN_DEVICE_CREATION_ERROR = 104,
    VULKAN_CHECK_SURFACE_SUPPORT_ERROR = 105,
    VULKAN_GET_SURFACE_CAPABILITIES_ERROR = 106,
    VULKAN_GET_SURFACE_FORMATS_ERROR = 107,
    VULKAN_GET_SURFACE_PRESENT_MODES_ERROR = 108,
    VULKAN_SWAPCHAIN_CREATION_ERROR = 109,
    VULKAN_GET_SWAPCHAIN_IMAGES_ERROR = 110,
    VULKAN_IMAGE_VIEW_CREATION_ERROR = 111,
    VULKAN_SHADER_MODULE_CREATION_ERROR = 112,
    VULKAN_RENDER_PASS_CREATION_ERROR = 113,
    VULKAN_PIPELINE_LAYOUT_CREATION_ERROR = 114,
    VULKAN_GRAPHIC_PIPELINE_CREATION_ERROR = 115,
    VULKAN_FRAMEBUFFER_CREATION_ERROR = 116,
    VULKAN_COMMAND_POOL_CREATION_ERROR = 117,
    VULKAN_COMMAND_BUFFERS_ALLOCATION_ERROR = 118,
    VULKAN_COMMAND_BUFFER_BEGIN_ERROR = 119,
    VULKAN_COMMAND_BUFFER_END_ERROR = 120,
    VULKAN_SEMAPHORE_CREATION_ERROR = 121,
    VULKAN_FENCE_CREATION_ERROR = 122,
    VULKAN_FENCES_WAIT_ERROR = 123,
    VULKAN_FENCES_RESET_ERROR = 124,
    VULKAN_GET_NEXT_SWAPCHAIN_IMAGE_ERROR = 125,
    VULKAN_COMMAND_BUFFER_RESET_ERROR = 126,
    VULKAN_QUEUE_SUBMITION_ERROR = 127,
    VULKAN_QUEUE_PRESENT_ERROR = 128,
    VULKAN_DEVICE_WAIT_IDLE_ERROR = 129,
    VULKAN_BUFFER_CREATION_ERROR = 130,
    VULKAN_ALLOCATE_MEMORY_ERROR = 131,
    VULKAN_BIND_BUFFER_MEMORY_ERROR = 132,
    VULKAN_MAP_MEMORY_ERROR = 133,
    VULKAN_QUEUE_WAIT_ERROR = 134,
    VULKAN_DEVICE_LOST_ERROR = 135,
    VULKAN_DESCRIPTOR_LAYOUT_CREATION_ERROR = 136,
    VULKAN_DESCRIPTOR_POOL_CREATION_ERROR = 137,
    VULKAN_DESCRIPTOR_SETS_ALLOCATION_ERROR = 138,

    WINDOW_GLFW_INIT_ERROR = 201,
    WINDOW_CREATION_ERROR = 202,
    WINDOW_SURFACE_CREATION_ERROR = 203,

    UNDEFINED = 0xFFFF
};

extern FILE *log_file;

enum AtomicError create_log_file(const char *path);
enum AtomicError close_log_file();

#endif
